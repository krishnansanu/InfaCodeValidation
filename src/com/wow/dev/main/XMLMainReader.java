package com.wow.dev.main;

import java.util.Calendar;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Set;
import com.wow.dev.infanodes.Workflow;
import com.wow.dev.infanodes.Session;
import com.wow.dev.infanodes.Mapping;


public class XMLMainReader 
{  
	public static void main(String[] args)  
	{
		String repositoryName = args[0];
		String folderName = args[1];
		String workflowName = args[2];
		String peerReviewerName = args[3];
		
		
		//Creation of Arraylist to catpure information, errors and warnings from the input XML
		Map<String, String> validationList=new LinkedHashMap<String, String>();
		
		// Reading XML and extracting NodeDetails from XML file.
		ExtractXMLDetails xmlDetails = new ExtractXMLDetails(workflowName+".xml");
		
		
		// Creation of Workflow Object for Validation
		Map<String, String> workflowObject[]=xmlDetails.extractDetailsToMap("WORKFLOW");
		Workflow workflows[]=new Workflow[workflowObject.length];
		for(int i=0;i<workflowObject.length;i++) {
			workflows[i] = new Workflow(workflowObject[i], folderName);
			workflows[i].validate(validationList);
		}
		
		// Creation of Session Object for Validation
		Map<String, String> sessionObject[]=xmlDetails.extractDetailsToMap("SESSION");
		Session sessions[] = new Session[sessionObject.length];
		for(int i=0;i<sessionObject.length;i++) {
			sessions[i] = new Session(sessionObject[i], folderName);
			sessions[i].validate(validationList);
		}
		
		Map<String, String> mappingObject[]=xmlDetails.extractDetailsToMap("MAPPING");
		Mapping mappings[]=new Mapping[mappingObject.length];
		for(int i=0;i<mappings.length;i++) {
			mappings[i]=new Mapping(mappingObject[i], folderName);
			mappings[i].validate(validationList);
		}
		
		
		
		String environment=repositoryName.contains("DVLP")?"DEV":repositoryName.contains("TEST")?"TEST":repositoryName.contains("ACPT")?"ACPT":"PROD";
		
		System.out.println("----------------------------------------------------------------------");
		System.out.println("         Informatica Code Review – ICC Standards check Report         ");
		System.out.println("----------------------------------------------------------------------");

		System.out.println("\n");
		System.out.println("Workflow Name\t\t\t\t: " + workflowName);
		System.out.println("Folder Name\t\t\t\t: " + folderName);
		System.out.println("Repository Name\t\t\t\t: " + repositoryName);
		System.out.println("Environment\t\t\t\t: "+environment);
		System.out.println("Generated By\t\t\t\t: "+peerReviewerName);
		System.out.println("Generated On\t\t\t\t: " + Calendar.getInstance().getTime());
		
		System.out.println("\n");

		System.out.println("Code Compliance Checklist and Status");
		
		
		
		for(int i=0;i<workflowObject.length;i++) {
			workflows[i].workflowValidationResults();
			System.out.println("\n");
		}
		
		
		for(int i=0;i<sessionObject.length;i++) {
			sessions[i].sessionValidationResults();
			System.out.println("\n");
		}
		
		for(int i=0;i<mappings.length;i++) {
			mappings[i].mappingValidationResults();
			System.out.println("\n");
		}
		
		System.out.println("Please find the review comments below");
		if(validationList.isEmpty()) {
			System.out.println("Informatica components are created as per the ICC Standards..");
		}else
		{
			Set<String> keys=validationList.keySet();
			for(String key:keys) {
				System.out.println(key + " : "+validationList.get(key));
			}
		}
		
	}
}  